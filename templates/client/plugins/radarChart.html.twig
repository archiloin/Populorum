
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
		<div class="col-xs-12 col-sm-12 col-md-12 col-lg-{{ radar_col_lg }} col-xl-{{ radar_col_xl }}">
				<div class="card mb-3">
						<div class="card">
								<h3> <i class="fa fa-briefcase"></i> {% trans %}Skills{% endtrans %}</h3>
								<p>{% trans %}Please select the skill to display{% endtrans %}</p>
								 <select name="monselect" style="float:right;">
										 <option value="0" selected> {% trans %}select a graphic{% endtrans %}:</option>
										 {% for skill in skills %}
										 		<option value="{{ skill.id }}">{{ skill.name }}</option>
										 	{% endfor %}
								 </select>
						</div>
						<div class="card-body">
								 {% for skill in skills %}
								 <div id="skill_{{ skill.id }}" class="mes_divs" style="display:none">
						 						<canvas id="radarChart-{{ skill.id }}"></canvas>
								 </div>
							 {% else %}
								 <p style="color:red">{% trans %}Add a skill to generate a graph{% endtrans %}</p>
							 {% endfor %}

								 <script type="text/javascript">
								 // Je sélectionne le select et quand la valeur change on fait une action
								 $('select[name="monselect"]').change(function(){
										 // Je créer l'id du div qui va être affiché
										 var id = "skill_" + $(this).val();
										 // Je cache toutes les divs grâce à une classe qui va sélectionner le tout
										 $('div.mes_divs').hide();
										 // Et j'affiche seulement le Div que je souhaite
										 $('#'+id).show();
								 });
								 </script>

						</div>
				</div><!-- end card-->
		</div>

			{% for skill in skills %}
	<script>
	// radarChart
	var ctx5 = document.getElementById("radarChart-{{ skill.id }}").getContext('2d');
	var doughnutChart = new Chart(ctx5, {
		type: 'radar',
		data: {
				labels: [{% for critere in skill.criteres %}"{{ critere.name }}", {% endfor %}],
				datasets: [{
					label: "Acquis",
					backgroundColor: 'rgba(0, 128, 0, 0.2)',
					borderColor: 'rgba(0,128,0,1)',
					pointBackgroundColor: 'green',
					data: [{% for critere in skill.criteres %}{{ critere.acquired }}, {% endfor %}]
				}, {
					label: "À acquérir",
					backgroundColor: 'rgba(255, 0, 0, 0.3)',
					borderColor: 'rgba(255, 0, 0, 1)',
					pointBackgroundColor: 'red',
					data: [{% for critere in skill.criteres %}{{ critere.toAcquire }}, {% endfor %}]
				},]
			},
			options: {
				responsive: true
			}

	});
	</script>

	{% endfor %}
